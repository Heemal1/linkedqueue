#include <stdio.h>
#include<stdlib.h>
struct queue{
    int size;
    int r;
    int f;
    int * arr;
};
void enqueueb(struct queue * q,int val){
    if(q->r==q->size-1){
        printf("queue is full");
    }
    
    else{ if(q->f==-1){
        q->f++;
    }
        q->r++;
        q->arr[q->r]=val;
    }
}
void dequeueb(struct queue * q){
    if(q->f==-1 && q->f<q->r){
        printf("queue is empty");
    }
    else{
        int y=q->arr[q->r];
       
        printf("deleted %d\n",y);
        if(q->f==q->r){
            q->f=q->r=-1;
        }
        else{
         q->r--;}
    }
}
void enqueuef(struct queue * q,int val){
    if( q->f==0 || q->f==-1){ 
        printf("queue is full");
    }
    
    else{ q->f--;
    q->arr[q->f]=val;
    }
}
void dequeuef(struct queue * q){
    if(q->f==-1){
        printf("queue is empty");
    }
    else{ int u=q->arr[q->f];
     printf("%d is deleted \n",u);
     if(q->f==q->r){
         q->f=q->r=-1;
     }
    else{ 
        q->f++;
    }
}}
void display(struct queue * q){
    int h= q->f;
    while(h<=q->r){
        printf("%d\n",q->arr[h]);
        h++;
    }
    
}
int main() {
 struct queue*q=(struct queue *)malloc(sizeof(struct queue));
 q->size=5;
 q->f=q->r=-1;
 q->arr=(int *)malloc(q->size*sizeof(int));
 enqueueb(q,41);
 enqueueb(q,43);
 display(q);
 printf("---------\n");
 dequeuef(q);
 display(q);
 printf("---------\n");
 enqueuef(q,56);
 
 display(q);
 printf("--------\n");
 dequeueb(q);
 display(q);
 
 
 




    return 0;
}
